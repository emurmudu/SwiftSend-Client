import { useState } from "react";
import useAxiosSecure from "../../hooks/useAxiosSecure";
import { useQuery } from "@tanstack/react-query";
import { useContext } from "react";
import { AuthContext } from "../../Providers/AuthProvider";
import useAxiosPublic from "../../hooks/useAxiosPublic";


const Deliveries = () => {
    const axiosSecure = useAxiosSecure();
    // const axiosPublic = useAxiosPublic()
    const [currentPage, setCurrentPage] = useState(1);
    const { user } = useContext(AuthContext);
    const pageSize = 5;

    // const { data: parcels = [], refetch } = useQuery({
    const { data: parcels = [] } = useQuery({
        // queryKey: ['bookedParcels', user?.email, currentPage],
        queryKey: ['deliveries', user?.deliveryMenId, currentPage],
        queryFn: async () => {
            // const res = await axiosPublic.get(`/bookedParcels/${user?.email}?page=${currentPage}`);
            const res = await axiosSecure.get(`/deliveries/${user?.deliveryMenId}?page=${currentPage}`);
            return res.data;
        }
    })


    return (
        <div>
            <div className=" flex justify-evenly mb-6">
                <h1 className="text-3xl">My Parcels Information </h1>
            </div>
            <div className="overflow-x-auto">
                <table className="table table-zebra w-full">

                    <thead className=" bg-red-200 shadow-sm">
                        <tr className=" text-neutral-950">
                            <th>Sl</th>
                            <th>Parcel Type</th>
                            <th>Requested Delivery Date</th>
                            <th>Approximate Delivery Date</th>
                            <th>Booking Date</th>
                            <th>Delivery Man ID</th>
                            <th>Booking Status</th>
                            <th>Update</th>
                            <th>Cancel</th>
                            <th>Review</th>
                            <th>Pay</th>
                        </tr>
                    </thead>
                    <tbody>
                        {
                            parcels.map((parcel, index) => <tr key={parcel._id}>
                                <th>{(currentPage - 1) * pageSize + index + 1}</th>
                                <td>{parcel.parcel_type}</td>
                                <td>{parcel.requested_delivery_date}</td>
                                <td>{parcel.approximateDeliveryDate}</td>{/* Approximate Delivery Date will be generated by clicking assign button on all parcels page manage modal */}
                                <td>{parcel.booking_date}</td>
                                <td>{parcel.deliveryMenId}</td>{/* ID will be generated by clicking assign button on all parcels page manage modal */}
                                <td>{parcel.status}</td>
                                <th>
                                    {<button onClick={() => handleManage(parcel)} className="btn hover:bg-orange-600 bg-orange-400 btn-sm">
                                        Update
                                    </button>}
                                </th>
                                <th>
                                    {<button onClick={() => handleManage(parcel)} className="btn hover:bg-orange-600 bg-orange-400 btn-sm">
                                        Cancel
                                    </button>}
                                </th>
                                <th>
                                    {<button onClick={() => handleManage(parcel)} className="btn hover:bg-orange-600 bg-orange-400 btn-sm">
                                        Review
                                    </button>}
                                </th>
                                <th>
                                    {<button onClick={() => handleManage(parcel)} className="btn hover:bg-orange-600 bg-orange-400 btn-sm">
                                        Pay
                                    </button>}
                                </th>
                            </tr>)
                        }
                    </tbody>
                </table>
            </div>
            <div className="flex justify-center my-4">
                <button
                    onClick={() => setCurrentPage(prevPage => Math.max(prevPage - 1, 1))}
                    disabled={currentPage === 1}
                    className="btn mx-2"
                >
                    Previous
                </button>
                <button
                    onClick={() => setCurrentPage(prevPage => prevPage + 1)}
                    disabled={parcels.length < pageSize}
                    className="btn mx-2"
                >
                    Next
                </button>
            </div>
        </div>
    )
};


export default Deliveries;